// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.128.0/containers/docker-existing-dockerfile
{
	"name": "ROS-Ubuntu Dev",

	// Sets the run context to one level up instead of the .devcontainer folder.
	// "context": ".."
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	// "dockerFile": "dev.Dockerfile",
	"dockerFile": "Dockerfile",

	"remoteUser": "ferzm", 
	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/usr/local/bin/python",
		"python.linting.pylintEnabled": true,
		"python.linting.enabled": true
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.cpptools",
		"ms-python.python",
		"twxs.cmake",
		"ms-azuretools.vscode-docker",
		"eamodio.gitlens",
		"ms-vscode.powershell",
		"matklad.rust-analyzer",
		"visualstudioexptteam.vscodeintellicode",
		"redhat.vscode-yaml",
		"vsciot-vscode.vscode-arduino",
		"ms-iot.vscode-ros",
		"smilerobotics.urdf",
		"ms-vsliveshare.vsliveshare",
		"ms-python.vscode-pylance"
	],

	// source=/mnt/c/Users/ferzm/project/src/,target=/root/ferzm/,type=bind,consistency=cached
	"workspaceMount": "source=/home/ferzm/rosdev/nodes/ros_wall_follower/,target=/home/ferzm/catkin_ws/src/ros_wall_follower/,type=bind,consistency=cached",

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	"runArgs": [
		"--privileged",
		"--rm",
		"--gpus", "all",
		"--net=host",
		"--runtime=nvidia",
		"-e", "DISPLAY=:1",
		// "-v", "/tmp/.X11-unix:/tmp/.X11-unix",
		// "--user", "$(id -u):$(id -g)"
		// "-v", "/mnt/c/Users/ferzm/rosdev/src/laser_sensor/:/catkin_ws/src/laser_sensor/"
	],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	"mounts": [ 
		"source=/tmp/.X11-unix/,target=/tmp/.X11-unix/,type=bind,consistency=cached"
		// "source=c:/Users/ferzm/rosdev/src/laser_sensor/,target=/catkin_ws/src/laser_sensor/,type=bind,consistency=cached",
		// "source=c:/Users/ferzm/rosdev/src/location_monitor/,target=/catkin_ws/src/location_monitor/,type=bind,consistency=cached",
		// "source=c:/Users/ferzm/rosdev/src/laser_scan/,target=/catkin_ws/src/laser_scan/,type=bind,consistency=cached",
		// "source=c:/Users/ferzm/rosdev/src/drive_car/,target=/catkin_ws/src/drive_car/,type=bind,consistency=cached",
	],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"

	"workspaceFolder": "/home/ferzm/catkin_ws/src"
}
